[project]
name = "unifi-protect-exporter"
version = "0.1.0"
description = "Prometheus exporter for UniFi Protect metrics"
readme = "README.md"
keywords = [ "unifi", "protect", "nvr", "camera", "security" ]
license = { text = "Apache-2.0" }
authors = [
  { name = "Rob Knight", email = "12484127+rknightion@users.noreply.github.com" },
]
requires-python = ">=3.13"
classifiers = [ "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: 3.13" ]
dependencies = [
  "anyio>=4.6",
  "cryptography>=45.0.5",
  "fastapi>=0.115",
  "httpx>=0.27",
  "jinja2>=3.1",
  "opentelemetry-api>=1.29",
  "opentelemetry-exporter-otlp>=1.29",
  "opentelemetry-instrumentation-fastapi>=0.50b0",
  "opentelemetry-instrumentation-httpx>=0.50b0",
  "opentelemetry-instrumentation-logging>=0.50b0",
  "opentelemetry-instrumentation-requests>=0.50b0",
  "opentelemetry-instrumentation-threading>=0.50b0",
  "opentelemetry-sdk>=1.29",
  "prometheus-client>=0.22.1",
  "psutil>=5.9",
  "pydantic>=2.10",
  "pydantic-settings>=2.6",
  "safety>=3.2.9",
  "structlog>=24.4",
  "uiprotect>=7.20.0",
  "uvicorn[standard]>=0.32",
]

[dependency-groups]
dev = [
  "httpx>=0.27",
  "mkdocs>=1.6.1",
  "mkdocs-git-authors-plugin>=0.10",
  "mkdocs-git-committers-plugin-2>=2.5",
  "mkdocs-git-revision-date-localized-plugin>=1.4.7",
  "mkdocs-glightbox>=0.4",
  "mkdocs-include-markdown-plugin>=7.1.6",
  "mkdocs-macros-plugin>=1.3.7",
  "mkdocs-material>=9.6.15",
  "mkdocs-material[imaging]>=9.6.15",
  "mkdocs-minify-plugin>=0.8",
  "mkdocstrings>=0.29.1",
  "mypy>=1.13",
  "pymdown-extensions>=10.16",
  "pytest>=8.3",
  "pytest-asyncio>=0.24",
  "pytest-cov>=6",
  "ruff>=0.12.2",
  "ty>=0.0.1a13",
]

[tool.ruff]
target-version = "py313"
line-length = 100
indent-width = 4
extend-exclude = [ "docs/*.md" ]

preview = true
lint.select = [
  "B",  # flake8-bugbear
  "C",  # flake8-comprehensions
  "D",  # pydocstyle
  "E",  # pycodestyle errors
  "F",  # pyflakes
  "I",  # isort
  "N",  # pep8-naming
  "Q",  # flake8-quotes
  "UP", # pyupgrade
  "W",  # pycodestyle warnings
]
lint.extend-select = [
  "NPY",  # NumPy-specific hints
  "PERF", # performance tweaks
  "PL",   # pylint rules
  "PTH",  # pathlib recommendations
]
lint.ignore = [
  "C901",    # function is too complex
  "D202",    # no blank lines after function docstring
  "D203",    # one blank line before class
  "D212",    # multi-line-summary-first-line
  "D213",    # multi-line docstring summary should start at the second line
  "D401",    # first line of docstring should be in imperative mood
  "D403",    # First word capitalization - needed for proper nouns like OpenTelemetry
  "E501",    # line too long (handled by formatter)
  "N815",    # mixed case variable names - needed for API compatibility
  "PERF401", # use list comprehension
  "PLC0415", # import should be at top-level of file
  "PLR0911", # too many return statements
  "PLR0912", # too many branches
  "PLR0913", # too many arguments in function definition
  "PLR0914", # too many local variables
  "PLR0915", # too many statements
  "PLR0917", # too many positional arguments
  "PLR1702",
  "PLR2004", # magic value used in comparison
  "PLR6301", # method could be function/class method/static method
  "PLW0603", # using global statement
  "W293",    # blank line contains whitespace
]
lint.per-file-ignores."src/unifi_protect_exporter/tools/*.py" = [ "C414", "PLR0916", "PLR6201", "PLW1514", "PTH123" ]
lint.per-file-ignores."tests/**/*.py" = [ "PLR0904" ] # Allow more than 20 public methods in test classes

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = [ "tests" ]
python_files = [ "test_*.py", "*_test.py" ]
python_classes = [ "Test*" ]
python_functions = [ "test_*" ]

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true
namespace_packages = true
show_error_codes = true
show_column_numbers = true
pretty = true
plugins = [ "pydantic.mypy" ]
exclude = [
  "docs/.*\\.md$",
  "tests/",
  "src/unifi_protect_exporter/tools/.*\\.py",
]

[[tool.mypy.overrides]]
module = [ "uiprotect.*", "prometheus_client.*", "opentelemetry.*" ]
ignore_missing_imports = true

[tool.pydocstyle]
convention = "numpy"
add-ignore = [ "D103", "D104", "D202", "D203", "D212", "D213", "D401", "D403" ]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.bandit]
exclude_dirs = [ "tests", "scripts" ]
skips = [ "B101", "B601", "B602", "B603", "B604", "B605", "B606", "B607", "B608", "B609", "B105" ]
